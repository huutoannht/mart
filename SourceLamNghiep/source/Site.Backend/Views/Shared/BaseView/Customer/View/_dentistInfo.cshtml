@using Data.DataContract.CategoryDC
@model Models.Customer.CustomerModel
@{
    var dateTimeHelper = ObjectFactory.GetInstance<IDateTimeHelper>();
    var sessionHelper = ObjectFactory.GetInstance<ISessionHelper>();
    var cache = ObjectFactory.GetInstance<ICacheHelper>();
    var products = cache.GetProducts();
}
<div class="form-group">
    @Html.CustomLabelFor(m => m.DentistName, new { @class = "col-md-2 control-label" })
    <div class="col-md-4">
        @Html.Label(Model.DentistName.ToStr(), new { @class = "control-label" })
    </div>
    @Html.CustomLabelFor(m => m.Gender, new { @class = "col-md-2 control-label" })
    <div class="col-md-4">
        @Html.Label(Model.Gender.HasValue ? Model.Gender.Value.GetEnumDesRes() : string.Empty, new { @class = "control-label" })
    </div>
</div>
<div class="form-group">
    @Html.CustomLabelFor(m => m.DentistPhone, new { @class = "col-md-2 control-label" })
    <div class="col-md-4">
        @Html.Label(Model.DentistPhone.ToStr(), new { @class = "control-label" })
    </div>
    @Html.CustomLabelFor(m => m.DentistEmail, new { @class = "col-md-2 control-label" })
    <div class="col-md-4">
        @Html.Label("", Model.DentistEmail)
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Age, new { @class = "col-md-2 control-label" })
    <div class="col-md-4">
        @{
            var age = cache.GetCategories(CategoryType.Age).FirstOrDefault(i => i.Id == Model.Age) ?? new Category();
        }
        @Html.Label(age.Name.ToStr(), new { @class = "control-label" })
    </div>
    @Html.LabelFor(m => m.Specialization, new { @class = "col-md-2 control-label" })
    <div class="col-md-4">
        @{
            var specialization = cache.GetCategories(CategoryType.Specialization).FirstOrDefault(i => i.Id == Model.Specialization) ?? new Category();
        }
        @Html.Label(specialization.Name.ToStr(), new { @class = "control-label" })
    </div>
</div>
<div class="form-group">
    @Html.CustomLabelFor(m => m.MaritalStatus, new { @class = "col-md-2 control-label" })
    <div class="col-md-4">
        @Html.Label(Model.MaritalStatus.HasValue ? Model.MaritalStatus.Value.GetEnumDesRes() : string.Empty, new { @class = "control-label" })
    </div>
    @Html.CustomLabelFor(m => m.JoinSeminar, new { @class = "col-md-2 control-label" })
    <div class="col-md-4">
        @Html.Label(Model.JoinSeminar.HasValue ? Model.JoinSeminar.Value.GetEnumDesRes() : string.Empty, new { @class = "control-label" })
    </div>
</div>
<div class="form-group">
    @Html.CustomLabelFor(m => m.JoinedDate, new { @class = "col-md-2 control-label" })
    <div class="col-md-4">
        <label class="control-label">
            @if (Model.JoinedDate.HasValue)
            {
                @dateTimeHelper.ConvertToLocal(Model.JoinedDate.Value, sessionHelper.CurrentTimeZone).ToDateString()
            }
        </label>
    </div>
    @if (Model.CustomerType == CustomerType.Current || Model.CustomerType == CustomerType.Prospects)
    {
        @Html.LabelFor(m => m.LeadTime, new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @{
        var leadTime = cache.GetCategories(CategoryType.LeadTime).FirstOrDefault(i => i.Id == Model.LeadTime) ?? new Category();
            }
            @Html.Label(leadTime.Name.ToStr(), new { @class = "control-label" })
        </div>
    }
</div>

@if (Model.CustomerType == CustomerType.Current || Model.CustomerType == CustomerType.Prospects)
{
    <div class="form-group">
        @Html.CustomLabelFor(m => m.InterestingDevice, new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            <label class="control-label">
                @{
                    var deviceIds = Model.InterestingDevice.ToStr().Split(new[] { "#" }, StringSplitOptions.RemoveEmptyEntries).Select(id => id.ToGuid()).ToList();
                    var listDeviceNames = new List<string>();
                    deviceIds.ForEach(id =>
                    {
                        var product = products.FirstOrDefault(i => i.Id == id);
                        if (product != null)
                        {
                            listDeviceNames.Add(product.Name);
                        }
                    });
                }
                @Html.Raw(string.Join("<br/>", listDeviceNames))
            </label>
        </div>
    </div>
}