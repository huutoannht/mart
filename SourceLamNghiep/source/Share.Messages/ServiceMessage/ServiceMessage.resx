<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountPendingApproval" xml:space="preserve">
    <value>Your account is pendding for approval</value>
  </data>
  <data name="BadRequest" xml:space="preserve">
    <value>We can not find your request data in the system. Please contact administrator</value>
  </data>
  <data name="CreditCardExpDateIsRequired" xml:space="preserve">
    <value>The credit card expiration date field is required</value>
  </data>
  <data name="CreditCardExpireDateIsInvalid" xml:space="preserve">
    <value>Credit Card Expire Date is invalid</value>
  </data>
  <data name="CreditCardNumberIsRequired" xml:space="preserve">
    <value>The Credit Card Number field is required</value>
  </data>
  <data name="CVVIsRequired" xml:space="preserve">
    <value>The CVV field is required</value>
  </data>
  <data name="DataIsInvalid" xml:space="preserve">
    <value>Data is invalid</value>
  </data>
  <data name="EmailExisted" xml:space="preserve">
    <value>This email is already existed in the system</value>
  </data>
  <data name="EmailIsRequired" xml:space="preserve">
    <value>The email field is required</value>
  </data>
  <data name="EmailNotificationIsNotSetup" xml:space="preserve">
    <value>Email address notification is not setup</value>
  </data>
  <data name="EmailTemplateDataNotFound" xml:space="preserve">
    <value>Email template data not found</value>
  </data>
  <data name="FirstNameIsRequired" xml:space="preserve">
    <value>The first name field is required</value>
  </data>
  <data name="LastNameIsRequired" xml:space="preserve">
    <value>The last name field is required</value>
  </data>
  <data name="NameIsExisted" xml:space="preserve">
    <value>This name is already existed</value>
  </data>
  <data name="NoDataEffect" xml:space="preserve">
    <value>No data effect</value>
  </data>
  <data name="PhoneIsRequired" xml:space="preserve">
    <value>The phone field is required</value>
  </data>
  <data name="PleaseInputPassword" xml:space="preserve">
    <value>Please input password</value>
  </data>
  <data name="PwdIncorrect" xml:space="preserve">
    <value>Password is incorrect</value>
  </data>
  <data name="RoleIsUsed" xml:space="preserve">
    <value>This role is assigned for users. Can not delete</value>
  </data>
  <data name="UnableFindUser" xml:space="preserve">
    <value>Unable find this user</value>
  </data>
  <data name="UserLocked" xml:space="preserve">
    <value>This user is current locked</value>
  </data>
  <data name="UserNameCanNotHaveWhiteSpace" xml:space="preserve">
    <value>The User Name can not have white space</value>
  </data>
  <data name="UserNameExisted" xml:space="preserve">
    <value>This user name is already existed in the system</value>
  </data>
  <data name="DataNotFound" xml:space="preserve">
    <value>Data not found</value>
  </data>
  <data name="PhoneIsExisted" xml:space="preserve">
    <value>This phone number is registered in the system</value>
  </data>
  <data name="PhoneNumberIsInvalid" xml:space="preserve">
    <value>Phone number is invalid</value>
  </data>
  <data name="PreferLanguageRequired" xml:space="preserve">
    <value>The Prefer Language field is required</value>
  </data>
  <data name="PreferLanguageIsInvalid" xml:space="preserve">
    <value>Prefer Language is invalid</value>
  </data>
  <data name="TimeZoneIsInvalid" xml:space="preserve">
    <value>Timezone is invalid</value>
  </data>
  <data name="PromoCodeIsExisted" xml:space="preserve">
    <value>PromoCode Is Existed. Please try again.</value>
  </data>
  <data name="CreditCardNumberIsExisted" xml:space="preserve">
    <value>Credit Card Number Is Existed. Can not add new or update</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>The Password field is required</value>
  </data>
  <data name="EmailIsInvalid" xml:space="preserve">
    <value>The Email Address is invalid</value>
  </data>
  <data name="SaveDataSuccessMessage" xml:space="preserve">
    <value>Save data successfull</value>
  </data>
  <data name="SignUpSuccessMessage" xml:space="preserve">
    <value>Sign up successfull. Please login</value>
  </data>
  <data name="FileTypeIsInvalid" xml:space="preserve">
    <value>The type of file is not valid</value>
  </data>
  <data name="FileMaxSize5MB" xml:space="preserve">
    <value>File's size maximum is 5MB</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>File not found</value>
  </data>
  <data name="UploadImageSuccessfull" xml:space="preserve">
    <value>Upload image successfull</value>
  </data>
  <data name="CanNotFindEmailOrPhone" xml:space="preserve">
    <value>Can not find email or phone</value>
  </data>
  <data name="CreditCardNotFound" xml:space="preserve">
    <value>Rider have not any credit card</value>
  </data>
  <data name="FileNameRequired" xml:space="preserve">
    <value>The File Name is required</value>
  </data>
  <data name="ImageDataIsEmpty" xml:space="preserve">
    <value>Data of image is empty</value>
  </data>
  <data name="ImageDataIsNotBase64String" xml:space="preserve">
    <value>Data of image is not base 64 string</value>
  </data>
  <data name="DistanceInvalid" xml:space="preserve">
    <value>Distance is invalid</value>
  </data>
  <data name="PaymentMethodIsInvalid" xml:space="preserve">
    <value>Payment Method is invalid</value>
  </data>
  <data name="CreditCardNumberIsInvalid" xml:space="preserve">
    <value>Credit card number is invalid</value>
  </data>
  <data name="MessageHasBeenSent" xml:space="preserve">
    <value>Message has been sent</value>
  </data>
  <data name="StringLenghtIsInvalid" xml:space="preserve">
    <value>The string length is excess maximun</value>
  </data>
  <data name="CategoryIsUsedCanNotDelete" xml:space="preserve">
    <value>Category is used, can not delete. Please delete all product belong to this category and then  you can delete this category.</value>
  </data>
  <data name="ProductOptionIsUsedCanNotDelete" xml:space="preserve">
    <value>This product option is used by categories or product order, can not delete!</value>
  </data>
  <data name="OrderStatusIsUsingByOrderCannotDelete" xml:space="preserve">
    <value>Status is using by order, delete order first.</value>
  </data>
  <data name="CannotAddNewIntoThisGroup" xml:space="preserve">
    <value>Can not add new item into this group. This group has child groups.</value>
  </data>
  <data name="CategoryIsUsedInProjectsCanNotDelete" xml:space="preserve">
    <value>This category is refered in project list.Can not delete.</value>
  </data>
  <data name="CodeExisted" xml:space="preserve">
    <value>This code is already existed in the system</value>
  </data>
  <data name="ClinicIdExisted" xml:space="preserve">
    <value>The clinic id is already existed</value>
  </data>
  <data name="ExcelFileClinicIdExisted" xml:space="preserve">
    <value>(Row {0}) Clinic id "{1}" is already existed</value>
  </data>
</root>